{"ast":null,"code":"var _jsxFileName = \"/Users/habibanezami/earthquake-dashboard/src/components/About.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      padding: '2rem',\n      textAlign: 'center',\n      backgroundColor: '#fef2f2'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '2.5rem',\n        marginBottom: '1rem',\n        color: '#7f1d1d'\n      },\n      children: \"About This Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '1.2rem',\n        maxWidth: '850px',\n        margin: '0 auto',\n        color: '#5a1a1a',\n        lineHeight: '1.8'\n      },\n      children: \"This Earthquake Dashboard is a complete web-based platform designed to provide visual insights and predictive analytics related to global earthquake events. The project uses historical earthquake datasets filtered from the year 1960 onwards, containing features such as magnitude, depth, population density, and urbanization rate to estimate potential fatalities. Machine learning models including Random Forest, Decision Tree, Linear Regression, Gradient Boosting, and K-Nearest Neighbors have been trained using scikit-learn. These models are saved using joblib and enhanced through correlation-weighted input features and data scaling. For backend deployment, the TabPy server is used to expose Python-based prediction functions. This allows seamless integration with frontend tools while ensuring accurate real-time outputs. The user interface is developed using React.js to maintain a smooth and responsive single-page application experience. Streamlit is embedded within the prediction page and provides an intuitive form-based interaction for users to input values and receive model predictions instantly. A Tableau Public dashboard is embedded to present a visual comparison of model performance metrics, making it easy to understand how different algorithms perform on the same data. Together, this application combines data science, interactive visualization, and web technologies into one cohesive system for earthquake impact estimation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","style","minHeight","padding","textAlign","backgroundColor","children","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","lineHeight","_c","$RefreshReg$"],"sources":["/Users/habibanezami/earthquake-dashboard/src/components/About.js"],"sourcesContent":["import React from 'react';\n\nfunction About() {\n  return (\n    <div style={{ minHeight: '100vh', padding: '2rem', textAlign: 'center', backgroundColor: '#fef2f2' }}>\n      <h2 style={{ fontSize: '2.5rem', marginBottom: '1rem', color: '#7f1d1d' }}>\n        About This Project\n      </h2>\n      <p style={{ fontSize: '1.2rem', maxWidth: '850px', margin: '0 auto', color: '#5a1a1a', lineHeight: '1.8' }}>\n        This Earthquake Dashboard is a complete web-based platform designed to provide visual insights and predictive analytics\n        related to global earthquake events.\n\n        The project uses historical earthquake datasets filtered from the year 1960 onwards, containing features such as magnitude,\n        depth, population density, and urbanization rate to estimate potential fatalities.\n\n        Machine learning models including Random Forest, Decision Tree, Linear Regression, Gradient Boosting, and K-Nearest Neighbors\n        have been trained using scikit-learn. These models are saved using joblib and enhanced through correlation-weighted input\n        features and data scaling.\n\n        For backend deployment, the TabPy server is used to expose Python-based prediction functions. This allows seamless integration\n        with frontend tools while ensuring accurate real-time outputs.\n\n        The user interface is developed using React.js to maintain a smooth and responsive single-page application experience.\n        Streamlit is embedded within the prediction page and provides an intuitive form-based interaction for users to input values\n        and receive model predictions instantly.\n\n        A Tableau Public dashboard is embedded to present a visual comparison of model performance metrics, making it easy to\n        understand how different algorithms perform on the same data.\n\n        Together, this application combines data science, interactive visualization, and web technologies into one cohesive system\n        for earthquake impact estimation.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EACf,oBACED,OAAA;IAAKE,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,QAAQ;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACnGP,OAAA;MAAIE,KAAK,EAAE;QAAEM,QAAQ,EAAE,QAAQ;QAAEC,YAAY,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAH,QAAA,EAAC;IAE3E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLd,OAAA;MAAGE,KAAK,EAAE;QAAEM,QAAQ,EAAE,QAAQ;QAAEO,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,QAAQ;QAAEN,KAAK,EAAE,SAAS;QAAEO,UAAU,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAC;IAuB5G;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACI,EAAA,GAhCQjB,KAAK;AAkCd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}