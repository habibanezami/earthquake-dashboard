{"ast":null,"code":"var _jsxFileName = \"/Users/habibanezami/earthquake-dashboard/src/components/About.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      padding: '2rem',\n      textAlign: 'center',\n      backgroundColor: '#fef2f2'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '2.5rem',\n        marginBottom: '1rem',\n        color: '#7f1d1d'\n      },\n      children: \"About This Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '1.2rem',\n        maxWidth: '850px',\n        margin: '0 auto',\n        color: '#5a1a1a'\n      },\n      children: [\"This Earthquake Prediction and Visualization Dashboard is an integrated web application that combines data science and user-centric design to provide both **data exploration** and **death prediction models** based on seismic activity.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this), \"\\u2705 The system uses a historical dataset of earthquake records filtered from **1960 onwards**, including parameters like magnitude, depth, population density, and urbanization rate to predict fatalities.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this), \"\\u2705 **Machine Learning models** (Random Forest, Decision Tree, Linear Regression, KNN, Gradient Boosting) are trained using scikit-learn and exported via `joblib`. Feature scaling and correlation-based weighting is applied to improve predictions.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this), \"\\u2705 The **prediction engine** is served using **TabPy**, which allows Python models to be accessed from outside apps like Streamlit or Tableau.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), \"\\u2705 The **frontend** is built with **React.js**, offering smooth navigation between pages like Dashboard, Predict, and About.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), \"\\u2705 The **Streamlit app** is embedded directly into the React interface and offers a model selector with real-time predictions based on user input.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), \"\\u2705 A **Tableau Public dashboard** displays a visual comparison of ML model performances (MAE, RMSE, R\\xB2), embedded alongside the predictor for side-by-side insights.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), \"Overall, this project demonstrates a complete integration of data processing, ML, backend prediction APIs, and interactive UI/UX \\u2014 empowering users to explore and estimate the impact of seismic events.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","style","minHeight","padding","textAlign","backgroundColor","children","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","_c","$RefreshReg$"],"sources":["/Users/habibanezami/earthquake-dashboard/src/components/About.js"],"sourcesContent":["import React from 'react';\n\nfunction About() {\n  return (\n    <div style={{ minHeight: '100vh', padding: '2rem', textAlign: 'center', backgroundColor: '#fef2f2' }}>\n      <h2 style={{ fontSize: '2.5rem', marginBottom: '1rem', color: '#7f1d1d' }}>\n        About This Project\n      </h2>\n      <p style={{ fontSize: '1.2rem', maxWidth: '850px', margin: '0 auto', color: '#5a1a1a' }}>\n        This Earthquake Prediction and Visualization Dashboard is an integrated web application that combines data science and\n        user-centric design to provide both **data exploration** and **death prediction models** based on seismic activity.\n        <br /><br />\n        ✅ The system uses a historical dataset of earthquake records filtered from **1960 onwards**, including parameters like\n        magnitude, depth, population density, and urbanization rate to predict fatalities.\n        <br /><br />\n        ✅ **Machine Learning models** (Random Forest, Decision Tree, Linear Regression, KNN, Gradient Boosting) are trained using\n        scikit-learn and exported via `joblib`. Feature scaling and correlation-based weighting is applied to improve predictions.\n        <br /><br />\n        ✅ The **prediction engine** is served using **TabPy**, which allows Python models to be accessed from outside apps like\n        Streamlit or Tableau.\n        <br /><br />\n        ✅ The **frontend** is built with **React.js**, offering smooth navigation between pages like Dashboard, Predict, and About.\n        <br /><br />\n        ✅ The **Streamlit app** is embedded directly into the React interface and offers a model selector with real-time\n        predictions based on user input.\n        <br /><br />\n        ✅ A **Tableau Public dashboard** displays a visual comparison of ML model performances (MAE, RMSE, R²), embedded alongside\n        the predictor for side-by-side insights.\n        <br /><br />\n        Overall, this project demonstrates a complete integration of data processing, ML, backend prediction APIs, and\n        interactive UI/UX — empowering users to explore and estimate the impact of seismic events.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EACf,oBACED,OAAA;IAAKE,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,QAAQ;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACnGP,OAAA;MAAIE,KAAK,EAAE;QAAEM,QAAQ,EAAE,QAAQ;QAAEC,YAAY,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAH,QAAA,EAAC;IAE3E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLd,OAAA;MAAGE,KAAK,EAAE;QAAEM,QAAQ,EAAE,QAAQ;QAAEO,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,QAAQ;QAAEN,KAAK,EAAE;MAAU,CAAE;MAAAH,QAAA,GAAC,4OAGvF,eAAAP,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,kNAGZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6PAGZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,sJAGZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,oIAEZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,0JAGZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,+KAGZ,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,kNAGd;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACG,EAAA,GAhCQhB,KAAK;AAkCd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}